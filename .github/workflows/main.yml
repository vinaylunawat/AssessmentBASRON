name: .NET
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
defaults:
  run:
    working-directory: ./BASRON/Source/App/Geography.Serverless

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      working-directory: ./BASRON/Source/App/Geography.Serverless
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}   
      AWS_REGION: ${{ secrets.AWS_REGION }}  
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Install AWS CLI v2
      run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o /tmp/awscliv2.zip
          unzip -q /tmp/awscliv2.zip -d /tmp
          rm /tmp/awscliv2.zip
          sudo /tmp/aws/install --update
          rm -rf /tmp/aws/
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}   
    - name: AWS CLI
      run: dotnet tool install -g Amazon.Lambda.Tools
    - name: Restore dependencies
      run: dotnet restore BASRON.Serverless.csproj
    - name: Build
      run: dotnet build --no-restore BASRON.Serverless.csproj         
    #- name: test cases
      #working-directory: ./BASRON/Source/Test/Geography.ServerlessTest
      #run: dotnet test Geography.ServerlessTests.csproj --environment ASPNETCORE_ENVIRONMENT="Production"
    - name: Deploy to Lambda
      working-directory: ./BASRON/Source/App/Geography.Serverless
      run: dotnet lambda deploy-serverless
